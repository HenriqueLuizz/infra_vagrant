$script_ssh = <<-SCRIPT
cat /configs/id_bionic.pub >> .ssh/authorized_keys
SCRIPT

$install_ansible = <<-SCRIPT
apt update &&\
apt install -y software-properties-common &&\
apt-add-repository --yes --update ppa:ansible/ansible &&\
apt install ansible -y
SCRIPT

Vagrant.configure('2') do |config|
    
    config.vm.box = 'ubuntu/bionic64'
    config.vm.provider "virtualbox" do |v|
        v.memory = 512
        v.cpus = 1
      end

    # config.vm.define "mysqldb" do |mysql|
    #     # Configuração de Rede #
    #     # mysql.vm.network 'forwarded_port', guest:80, host:8089     # Redirecionamento de porta
    #     # mysql.vm.network 'private_network', ip: '192.168.50.4'   # Configurando ip privado fixo
    #     # mysql.vm.network 'private_network', type: 'dhcp'         # Configurando ip privado dinamico
    #     mysql.vm.network 'public_network', ip: '192.168.15.120'    # Configurando ip publico fixo
    #     # mysql.vm.network 'public_network', type: 'dhcp'          # Configurando ip publico dinamico

    #     #  Provision # 
    #     mysql.vm.provision "shell", 
    #         inline: "uname -a"
    #     mysql.vm.provision "shell",
    #         inline: $script_ssh
    #     mysql.vm.provision "shell",
    #         path: "./configs/install-mysql.sh"
    #     mysql.vm.provision "shell",
    #         inline: "cat /configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf"
    #     mysql.vm.provision "shell",
    #         inline: "service mysql restart"

    #     # Sync Folder #
    #     mysql.vm.synced_folder "./configs", "/configs"
    #     mysql.vm.synced_folder ".", "/vagrant", disable: true
    # end

    config.vm.define "phpweb" do |phpweb|
        phpweb.vm.network 'forwarded_port', guest:8888, host:8888
        phpweb.vm.network 'public_network'

        phpweb.vm.provider "virtualbox" do |vb|
            vb.memory = 1024
            vb.cpus = 2
            vb.name = "ubuntu_bionic_php7"
        end

        phpweb.vm.provision "shell",
            inline: $script_ssh

        phpweb.vm.provision "shell",
            inline: 'apt-get update && apt-get install -y puppet'

        phpweb.vm.provision 'puppet' do |puppet|
            puppet.manifests_path = './configs/manifests'
            puppet.manifest_file = 'phpweb.pp'
        end

        phpweb.vm.synced_folder "./configs", "/configs"
        phpweb.vm.synced_folder ".", "/vagrant", disable: true
    end

    config.vm.define "mysqlserver" do |mysqlserver|
        mysqlserver.vm.network 'public_network', ip: '192.168.15.121'

        mysqlserver.vm.provision "shell",
        inline: $script_ssh

        # Sync Folder #
        mysqlserver.vm.synced_folder "./configs", "/configs"
        mysqlserver.vm.synced_folder ".", "/vagrant", disable: true

        mysqlserver.vm.provision "ansible" do |ansible|
            ansible.playbook = "./configs/ansible/playbook.yml"
        end
    end

    # config.vm.define "ansible" do |ansible|
        
    #     ansible.vm.network "public_network", ip: "192.168.15.126"

    #     ansible.vm.provision "shell",
    #         inline: "apt-get update &&  \
    #            apt-get install -y software-properties-common && \
    #            apt-add-repository --yes --update ppa:ansible/ansible && \
    #            apt-get install -y ansible "

    #     ansible.vm.provision "shell",
    #         inline: "cp /vagrant/id_bionic /home/vagrant/id_bionic && \
    #             chmod 600 /home/vagrant/id_bionic"

    #     ansible.vm.provision "shell",
    #         inline: "ansible-playbook -i /vagrant/configs/ansible/hosts \
    #               /vagrant/configs/ansible/playbook.yml"
    #     end

    config.vm.define "memcached" do |memcached|
        
        memcached.vm.box = "centos/7"
        
        memcached.vm.provider "virtualbox" do |vb|
            vb.memory = 512
            vb.cpus = 1
            vb.name = "centos7_memcached"
        end
    end

    config.vm.define "dockerhost" do |dockerhost|
        dockerhost.vm.provider "virtualbox" do |vb|
            vb.memory = 512
            vb.cpus = 1
            vb.name = "ubuntu_dockerhost"
        end

        dockerhost.vm.provision "shell", 
            inline: "apt-get update && apt-get install -y docker.io"
    end
end